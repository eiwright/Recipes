// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Recipe.Service.Data;

#nullable disable

namespace Recipe.Service.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220620171914_AddImageFiles")]
    partial class AddImageFiles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Recipe.Service.Domain.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cherries"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Flour"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Egg"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Butter"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Water"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Yeast"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sugar"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Apples"
                        });
                });

            modelBuilder.Entity("Recipe.Service.Domain.Models.Instruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Order")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Instructions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Preheat over to 375",
                            Order = 1,
                            RecipeId = 1
                        });
                });

            modelBuilder.Entity("Recipe.Service.Domain.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Image")
                        .HasMaxLength(128000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A whole made Cherry Pie.",
                            Image = "https://tastesbetterfromscratch.com/wp-content/uploads/2020/04/Cherry-Pie-11.jpg",
                            Name = "Cherry Pie"
                        });
                });

            modelBuilder.Entity("Recipe.Service.Domain.Models.RecipeIngredients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Calories")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId", "IngredientId")
                        .IsUnique();

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calories = 500,
                            IngredientId = 1,
                            Quantity = "2 cups",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Calories = 200,
                            IngredientId = 2,
                            Quantity = "2 cups",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Calories = 150,
                            IngredientId = 3,
                            Quantity = "3",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Calories = 1000,
                            IngredientId = 4,
                            Quantity = "1 stick",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 5,
                            Calories = 0,
                            IngredientId = 5,
                            Quantity = "1 cup",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 6,
                            Calories = 0,
                            IngredientId = 6,
                            Quantity = "1 Tbs",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 7,
                            Calories = 375,
                            IngredientId = 7,
                            Quantity = "1 cup",
                            RecipeId = 1
                        });
                });

            modelBuilder.Entity("Recipe.Service.Domain.Models.Instruction", b =>
                {
                    b.HasOne("Recipe.Service.Domain.Models.Recipe", "Recipe")
                        .WithMany("Instructions")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Recipe.Service.Domain.Models.RecipeIngredients", b =>
                {
                    b.HasOne("Recipe.Service.Domain.Models.Ingredient", "Ingredient")
                        .WithMany("Recipes")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Recipe.Service.Domain.Models.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Recipe.Service.Domain.Models.Ingredient", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Recipe.Service.Domain.Models.Recipe", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("Instructions");
                });
#pragma warning restore 612, 618
        }
    }
}
